type Farm = record { name : text; metadata : text; farmer : text };
type Person = record {
  id : text;
  image_cid : text;
  name : text;
  role : Role;
  approved : bool;
};
type Data  = record {
    id: text;
    farm_id: blob;
    ts: int64;
    metadata: text;
};
type Role = variant {
  Farmer;
  Harvester;
  ReceivingManager;
  FarmManager;
  FactoryManager;
  FieldManager;
};
service : {
  add_farm : (text, text) -> ();
  get_farm : (text) -> (opt Farm) query;
  get_farms : () -> (vec Farm) query;
  get_worker : (text, text) -> (opt Person) query;
  get_workers : (text) -> (vec Person) query;
  get_workers_from_workerid : (text) -> (vec Person) query;
  get_farm_from_workerid : (text) -> (opt Farm) query;
  update_farmer : (text, text, text, text, Role, text) -> ();
  update_worker : (text, text, text, Role, text) -> ();
  add_data: (text, int64, text, text) -> ();
  get_data_by_id: (text) -> (Data);
  get_data_by_farm: (text, int64, int64) -> (vec Data);
  id : () -> (text) query;
  geo_search: (text, float64) -> (vec text);
}
